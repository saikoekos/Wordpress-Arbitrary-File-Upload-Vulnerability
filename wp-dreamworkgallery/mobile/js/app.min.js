(function (d, b, a) {
    d.noConflict();
    var sj;
    var c = function (e) {
        if (e) {
            return console.log(e);
        } else {
            console.log("test");
        }
    };
    d(function () {
        var g = function (m, l, i) {
            var j = this;
            sj=j;
            var k = l;
            j.settings = {
                width: "700",
                height: "500"
            };
            j.cates = [];
            j.$container = d("#" + m);
            j.slide = function (o, p, n) {
                d(o).css({
                    "-webkit-transform": "translate3d(" + (p - j.settings.width) + "px, 0px, 0px)",
                    "-webkit-transition-duration": "0.5s",
                });
                d(o).bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", n);
            };
            j.getSlider = function (p, r) {
                d("#MG-items" + i + " img").addClass("disable");
                var o = template.compile(tplMGslider);
                var q = o(r);
                d("#MG-slider" + i).append(q);
                j.$container.find(".MG-loading-block").attr("id", "MG-loading-block" + i);
                j.$container.find(".royalSlider").attr("id", "royalSlider" + i);
                d("#royalSlider" + i).royalSlider({
                    globalCaption: true,
                    startSlideId: p,
                    imageScaleMode: "fill",
                    navigateByClick: false,
                    addActiveClass: true,
                    imageAlignCenter: false
                });
                var n = d("#royalSlider" + i).data("royalSlider");
                n.ev.on("rsAfterContentSet", function (s, t) {
                    d("#royalSlider" + i + " .rsSlide").waitForImages(function () {
                        if (d("#MG" + i).hasClass("ready")) {
                            if (d("#royalSlider" + i + " .rsCaption").text() === "") {
                                d("#royalSlider" + i + " .rsCaption").css({
                                    "margin-top": 0,
                                    "margin-bottom": 0
                                });
                            }
                            d("#MG" + i).removeClass("ready");
                            d("#MG-loading-block" + i).hide();
                        }
                    });
                });
                n.ev.on("rsAfterSlideChange", function () {
                    if (d("#royalSlider" + i + " .rsCaption").text() === "") {
                        d("#royalSlider" + i + " .rsCaption").css({
                            "margin-top": 0,
                            "margin-bottom": 0
                        });
                    }
                });
                d("body").on("click", "#MG-slider" + i + " .itemButton", function () {
                    d("#MG-items" + i + " img").removeClass("disable");
                    j.slide("#MG-slider" + i, j.settings.width, function () {
                        d("#MG-slider" + i).empty();
                        d("#MG-slider" + i).removeClass("actived");
                        d("#MG" + i).addClass("ready");
                        d("#MG-slider" + i).unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd");
                    });
                });
            };
            j.getItems = function (o) {
                d("#MG-items" + i + " img").removeClass("disable");
                j.itemsObj = {};
                j.itemsObj = j.catsObj.cates[o];
                j.itemsObj.setting = j.settings;
                var n = template.compile(tplMGitem);
                n = n(j.itemsObj);
                d("#MG-items" + i).append(n);
                new iScroll("MG-items" + i, {
                    hScrollbar: false,
                    vScrollbar: false,
                    hScroll: false,
                    vScroll: true
                });
                d("#MG-items" + i + " .catButton").bind("click", function () {
                    var p = d(this).parents(".MG");
                    if (d(p).hasClass("noHome")) {
                        d(p).removeClass("noHome");
                    }
                    d("#MG-items" + i + " img").addClass("disable");
                    j.slide("#MG-items" + i, j.settings.width, function () {
                        d("#MG-items" + i).empty();
                        d("#MG-items" + i).unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd");
                    });
                });
                d("#MG-items" + i + " .block-item img").bind("click", function () {
                    if (!d(this).hasClass("disable")) {
                        j.itemsnum = d(this).data("num");
                        j.slide("#MG-slider" + i, 0, function () {
                            if (!d("#MG-slider" + i).hasClass("actived")) {
                                d("#MG-slider" + i).addClass("actived");
                                j.getSlider(j.itemsnum, j.itemsObj);
                                d("#MG-slider" + i).unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd");
                            }
                        });
                    }
                });
            };
            j.getCats = function () {
                var n = template.compile(tplMGcat);
                n = n(j.catsObj);
                d("#MG-cats" + i).append(n);
                new iScroll("MG-cats" + i, {
                    hScrollbar: false,
                    vScrollbar: false,
                    hScroll: false,
                    vScroll: true
                });
                d("#MG-cats" + i + " img").bind("click", function () {
                    console.log('ashi');
                    var o = d(this).parents(".MG");
                    if (!d(o).hasClass("noHome")) {
                        d(o).addClass("noHome");
                        j.catsnum = d(this).data("num");
                        j.slide("#MG-items" + i, 0, function () {
                            //console.log(j.catsnum);
                            j.getItems(j.catsnum);
                            d("#MG-items" + i).unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd");
                        });
                    } else {
                        return false;
                    }
                });

                //if there is only one categroy then show items rather showing categories
                if(j.catsObj.cates.length==1){
                    j.slide("#MG-items" + i, 0, function () {
                        //console.log(j.catsnum);
                        j.getItems(0);
                        d("#MG-items" + i).unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd");
                    });
                }
            };
            j.initStyle = function () {
                var n = '<style id="mg-style' + i + '">#MG' + i + "{border:1px solid #999;width: " + j.settings.width + "px;height:" + j.settings.height + "px}#MG" + i + " .rsCaption font, #MG" + i + " h4, #MG" + i + " .MG-block-nav-button, #MG" + i + " .MG-slider-item-title{font-size:12px;font-family:lucida grande,tahoma,verdana,arial,sans-serif;}#MG" + i + " .MG-slider-item-title{background: none;margin: 0 80px;color: #fff;}#MG" + i + " h3{background: none;}#MG" + i + " .royalSlider, #MG" + i + " .MG-loading-block, #MG" + i + " .MG-block{width: " + j.settings.width + "px;height:" + j.settings.height + "px}#MG" + i + " .MG-inner{width: " + 2 * j.settings.width + "px;height: " + j.settings.height + "px}#MG" + i + " .MG-slider, #MG" + i + " .MG-items{left: " + j.settings.width + "px}</style>";
                if (d("head").find("#mg-style" + i).length === 0) {
                    d("head").append(n);
                }else{
                    d("head").find("#mg-style" + i).html('');
                    d("head").append(n);
                }
            };
            j.render = function () {
                j.initStyle();
                j.catsObj = {};
                j.catsObj.cates = j.cates;
                j.$container.append(tplMGmain);
                j.$container.find(".MG-block").each(function () {
                    var n = d(this).data("id");
                    d(this).attr("id", n + i);
                });
                j.$container.find(".MG").attr("id", "MG" + i);
                j.getCats();
            };
            j.getArray = function (n) {
                var o = [];
                for (var p = 0; p < n.length; p++) {
                    o[p] = {
                        desc: d(n[p]).find("description").text(),
                        interactive: d(n[p]).attr("interactive"),
                        link: d(n[p]).find("link").text(),
                        oriImg: {
                            scale: d(n[p]).find("main").attr("scale"),
                            src: d(n[p]).find("main").text()
                        },
                        thumb: {
                            scale: d(n[p]).find("thumb").attr("scale"),
                            src: d(n[p]).find("thumb").text()
                        },
                        price: d(n[p]).find("price").find("regular").text(),
                        zoom: d(n[p]).attr("zoom"),
                        label: d(n[p]).find("label").text()
                    };
                }
                return o;
            };
            j.XML = function () {
                var n = function (q) {
                    //console.log(d(g))
                    var o = d(q);
                    var w = o.find("mobileSettings");
                    //console.log(w);
                    var v = w.children();
                    for (var p = 0; p < v.length; p++) {
                        var t = d(v[p]).prop("tagName");
                        t = t.toLowerCase(t);
                        var s = d(v[p]).text();
                        if (s !== "" && s) {
                            j.settings[t] = s;
                        }
                    }
                    //console.log(j.settings);
                    //console.log(d('#'+j.settings.containerid).width());
                    j.settings.width=d('#'+j.settings.containerid).width()-2;
                    //console.log(v);
                    //console.log(v[4].textContent);
                    //set container height width intelligently
                    if(v[4].textContent=='yes'){
                        //Only tablet(portrait) and phone(landscape)
                        if(j.settings.width>=768 && j.settings.width<=959 && j.settings.mheight1){
                            j.settings.height=j.settings.mheight1;
                            console.log('Mwidth : '+j.settings.width+ ' Mheight1 : '+ j.settings.height);
                        }

                        //Only tablet(landscape)
                        if(j.settings.width>=568 && j.settings.width<=767  && j.settings.mheight2){
                            j.settings.height=j.settings.mheight2;
                            console.log('Mwidth : '+j.settings.width+ ' Mheight2 : '+ j.settings.height);
                        }

                        //only phone[landscape]
                        if(j.settings.width>=480 && j.settings.width<=568  && j.settings.mheight3){
                            j.settings.height=j.settings.mheight3;
                            console.log('Mwidth : '+j.settings.width+ ' Mheight3 : '+ j.settings.height);
                        }

                        //only phone[portrait]
                        if(j.settings.width<=479 && j.settings.mheight4){
                            j.settings.height=j.settings.mheight4;
                            console.log('Mwidth : '+j.settings.width+ ' Mheight4 : '+ j.settings.height);
                        }
                    }
                    else{
                        //apply some intelligent(considering, when 1024 width then heigh 768)
                        //Only tablet(portrait) and phone(landscape)
                        if(j.settings.width>=768 && j.settings.width<=959){
                            j.settings.height=647; //(768+((959-768)/2)*768)/1024
                            console.log('Mwidth : '+j.settings.width+ ' Mheight1 : '+ j.settings.height);
                        }

                        //Only tablet(landscape)
                        if(j.settings.width>=568 && j.settings.width<=767){
                            j.settings.height=500;//(568+((767-568)/2)*768)/1024
                            console.log('Mwidth : '+j.settings.width+ ' Mheight2 : '+ j.settings.height);
                        }

                        //only phone[landscape]
                        if(j.settings.width>=480 && j.settings.width<=567){
                            j.settings.height=392;//(480+((567-480)/2)*768)/1024
                            console.log('Mwidth : '+j.settings.width+ ' Mheight3 : '+ j.settings.height);
                        }

                        //only phone[portrait]
                        if(j.settings.width>=360 && j.settings.width<=479){
                            j.settings.height=270;
                            console.log('Mwidth : '+j.settings.width+ ' Mheight4 : '+ j.settings.height);
                        }

                        //only mini phone[portrait]
                        if(j.settings.width>=200 && j.settings.width<=359){
                            j.settings.height=170;
                            console.log('Mwidth : '+j.settings.width+ ' Mheight5 : '+ j.settings.height);
                        }
                    }
                    var r = o.find("content");
                    var u = r.children();
                    for (var p = 0; p < u.length; p++) {
                        j.cates[p] = {
                            attr: {
                                thumb: d(u[p]).children("thumb").text(),
                                title: d(u[p]).children("title").text()
                            },
                            items: j.getArray(d(u[p]).find("item"))
                        };
                    }
                    if (j.cates) {
                        j.render();
                    }
                };
                d.ajax({
                    type: "GET",
                    url: k,
                    success: n
                });
            };
            j.init = function () {
                j.XML();
            };
        };
        var h = [];
        var f;
        console.log(d("embed"));
        if (d("embed").length === 0) {
            var e = setInterval(function () {
                if (d(".mobile").length !== 0) {
                    clearInterval(e);
                    d(".mobile").each(function (k) {
                        var j = d(this).attr("mobile");
                        //console.log(j);
                        var l = "mbg-container" + k;
                        var i = '<div class="mbgallery" id="' + l + '">';
                        d(this).wrap(i);
                        d("#" + l).empty();
                        h[k] = new g("mbg-container" + k, j, k);
                        h[k].init();
                    });
                }
            });
        }
        else {
            d("embed").each(function (k) {
                var j = d(this).attr("mobile");
                //console.log(j);
                var l = "mbg-container" + k;
                var i = '<div class="mbgallery" id="' + l + '">';
                d(this).wrap(i);
                d("#" + l).empty();
                h[k] = new g("mbg-container" + k, j, k);
                h[k].init();
            });
        }

        var doit;
        function resize_galleryWH(){
            //console.log(h.length);
            jQuery('.mbgallery').html('');
            for(i=0;i< h.length;i++){
                //h[i].initStyle();
                h[i].init();
            }
        }

        jQuery(window).resize(function() {
            clearTimeout(doit);
            doit = setTimeout(function() {
                resize_galleryWH();
            }, 100);
        });
    });
})(jQuery, window, document);

